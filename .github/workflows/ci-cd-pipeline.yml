name: Python CI/CD Pipeline

on:
  push:
    branches:
      - deploy-to-ec2  # Trigger the workflow on push to  the `deploy-to-ec2` branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.7

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 5: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t maliabhi23/myime:latest .

      # Step 6: Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push maliabhi23/myime:latest

  deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest  #  Replace with a setup to connect to your EC2 instance
    steps:
      # Step 7: Connect to EC2 instance via SSH and run commands
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEYS}}
          script: |
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            docker pull maliabhi23/myime:latest
            docker stop myime || true && docker rm myime || true
            docker run -d -p 80:8501 --name myime maliabhi23/myime:latest
